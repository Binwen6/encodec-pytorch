common:
  save_interval: 2
  test_interval: 2
  log_interval: 100
  max_epoch: 200
  seed: 3401
  amp: False

datasets:
  # type can be 'audio' (original) or 'eeg_pair' (EEG->audio reconstruction)
  type: 'eeg_pair'
  # audio-only mode settings (kept for backward compatibility)
  audio_root: '/root/autodl-tmp/maestro-v3.0.0'
  train_csv_path: '/root/autodl-tmp/maestro-v3.0.0/maestro-v3.0.0.csv'
  test_csv_path: '/root/autodl-tmp/maestro-v3.0.0/maestro-v3.0.0.csv'
  # eeg-pair mode settings
  eeg_dir: '/root/autodl-tmp/eeg_npy'
  audio_path: '/root/autodl-tmp/music_dataset/11_24k.wav'
  train_ratio: 0.8
  batch_size: 8
  # for 24kHz and 8 seconds clips => 192000 samples
  tensor_cut: 192000
  num_workers: 4
  fixed_length: 0
  pin_memory: True

checkpoint:
  resume: False
  checkpoint_path: ''
  disc_checkpoint_path: ''
  save_folder: './checkpoints/'
  save_location: '${checkpoint.save_folder}/bs${datasets.batch_size}_cut${datasets.tensor_cut}_length${datasets.fixed_length}_' 

tensorboard:
  log_dir: '/root/tf-logs'

optimization:
  lr: 3e-4
  disc_lr: 3e-4

lr_scheduler:
  warmup_epoch: 5

model:
  target_bandwidths: [1.5, 3., 6., 12., 24.]
  sample_rate: 24_000
  # use mono for EEG-pair training (set to 1)
  channels: 1
  train_discriminator: True # you can set it to 2/3 and other number to train discriminator only
  audio_normalize: True
  filters: 32
  ratios: [8, 5, 4, 2]
  disc_win_lengths: [1024, 2048, 512]
  disc_hop_lengths: [256, 512, 128]
  disc_n_ffts: [1024, 2048, 512]
  causal: True
  norm: 'weight_norm'
  segment: None
  name: 'my_encodec'

distributed:
  data_parallel: True
  world_size: 1
  find_unused_parameters: False
  torch_distributed_debug: False
  init_method: tcp

balancer:
  weights:
    l_t: 0.1
    l_f: 1
    l_g: 3
    l_feat: 3


